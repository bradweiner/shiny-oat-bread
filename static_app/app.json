[{"name":"app.R","content":"library(shiny)\r\nlibrary(shinyTime)\r\n\r\n# Default start time (7 AM)\r\ndefault_start_time <- as.POSIXct(\"07:00\", format = \"%H:%M\")\r\n\r\n# Example step offsets (in minutes)\r\nstep_offsets <- c(300, 60, 30, 30, 30, 30, 30, 30, 150, 20)\r\n\r\n# Default times\r\ndefault_times <- list(\r\n  step_1 = default_start_time,\r\n  step_2 = default_start_time + step_offsets[1] * 60,\r\n  step_3 = default_start_time + (step_offsets[1] + step_offsets[2]) * 60,\r\n  step_4 = default_start_time + sum(step_offsets[1:3]) * 60,\r\n  step_5 = default_start_time + sum(step_offsets[1:4]) * 60,\r\n  step_6 = default_start_time + sum(step_offsets[1:5]) * 60,\r\n  step_7 = default_start_time + sum(step_offsets[1:6]) * 60,\r\n  step_8 = default_start_time + sum(step_offsets[1:7]) * 60,\r\n  step_9 = default_start_time + sum(step_offsets[1:8]) * 60,\r\n  step_10 = default_start_time + sum(step_offsets[1:9]) * 60,\r\n  step_11 = default_start_time + sum(step_offsets[1:10]) * 60\r\n)\r\n\r\n# Helper function to format times as 12-hour format with AM/PM\r\nformat_time_12h <- function(time) {\r\n  format(time, \"%I:%M %p\")\r\n}\r\n\r\nui <- fluidPage(\r\n  titlePanel(\"Barb's Bread Timing Machine\"),\r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      timeInput(\"step_1\", \"1. Feed Starter:\", value = default_times$step_1, seconds = FALSE),\r\n      timeInput(\"step_2\", \"2. Start Autolyse & Make Porridge:\", value = default_times$step_2, seconds = FALSE),\r\n      timeInput(\"step_3\", \"3. Add Salt and Start Bulk Fermentation:\", value = default_times$step_3, seconds = FALSE),\r\n      timeInput(\"step_4\", \"4. First Turn and Mix-in Oats:\", value = default_times$step_4, seconds = FALSE),\r\n      timeInput(\"step_5\", \"5. Turn #2:\", value = default_times$step_5, seconds = FALSE),\r\n      timeInput(\"step_6\", \"6. Turn #3:\", value = default_times$step_6, seconds = FALSE),\r\n      timeInput(\"step_7\", \"7. Turn #4:\", value = default_times$step_7, seconds = FALSE),\r\n      timeInput(\"step_8\", \"8. Turn #5:\", value = default_times$step_8, seconds = FALSE),\r\n      timeInput(\"step_9\", \"9. Turn #6 and Leave Alone for 2.5 hours:\", value = default_times$step_9, seconds = FALSE),\r\n      timeInput(\"step_10\", \"10. Turn on Counter and Shape for Bench Rest:\", value = default_times$step_10, seconds = FALSE),\r\n      timeInput(\"step_11\", \"11. Fold and Place in Fridge:\", value = default_times$step_11, seconds = FALSE),\r\n      \r\n      actionButton(\"reset\", \"Reset\")\r\n    ),\r\n    mainPanel(\r\n      h4(\"Adjusted Times:\"),\r\n      verbatimTextOutput(\"adjusted_times\")\r\n    )\r\n  )\r\n)\r\n\r\nserver <- function(input, output, session) {\r\n  # Reactive values to store times\r\n  times <- reactiveValues(\r\n    step_1 = default_times$step_1,\r\n    step_2 = default_times$step_2,\r\n    step_3 = default_times$step_3,\r\n    step_4 = default_times$step_4,\r\n    step_5 = default_times$step_5,\r\n    step_6 = default_times$step_6,\r\n    step_7 = default_times$step_7,\r\n    step_8 = default_times$step_8,\r\n    step_9 = default_times$step_9,\r\n    step_10 = default_times$step_10,\r\n    step_11 = default_times$step_11\r\n  )\r\n  \r\n  # Function to update subsequent steps\r\n  update_following_steps <- function(changed_step, times, session) {\r\n    step_names <- names(times)\r\n    step_index <- which(step_names == changed_step)\r\n    \r\n    for (i in (step_index + 1):length(step_names)) {\r\n      new_time <- times[[step_names[i - 1]]] + step_offsets[i - 1] * 60  # Add offset for next step\r\n      times[[step_names[i]]] <- new_time\r\n      updateTimeInput(session, step_names[i], value = new_time)\r\n    }\r\n  }\r\n  \r\n  # Observers for each step\r\n  observeEvent(input$step_1, {\r\n    times$step_1 <- input$step_1\r\n    update_following_steps(\"step_1\", times, session)\r\n  })\r\n  \r\n  observeEvent(input$step_2, {\r\n    times$step_2 <- input$step_2\r\n    update_following_steps(\"step_2\", times, session)\r\n  })\r\n  \r\n  observeEvent(input$step_3, {\r\n    times$step_3 <- input$step_3\r\n    update_following_steps(\"step_3\", times, session)\r\n  })\r\n  \r\n  observeEvent(input$step_4, {\r\n    times$step_4 <- input$step_4\r\n    update_following_steps(\"step_4\", times, session)\r\n  })\r\n  \r\n  observeEvent(input$step_5, {\r\n    times$step_5 <- input$step_5\r\n    update_following_steps(\"step_5\", times, session)\r\n  })\r\n  \r\n  observeEvent(input$step_6, {\r\n    times$step_6 <- input$step_6\r\n    update_following_steps(\"step_6\", times, session)\r\n  })\r\n  \r\n  observeEvent(input$step_7, {\r\n    times$step_7 <- input$step_7\r\n    update_following_steps(\"step_7\", times, session)\r\n  })\r\n  \r\n  observeEvent(input$step_8, {\r\n    times$step_8 <- input$step_8\r\n    update_following_steps(\"step_8\", times, session)\r\n  })\r\n  \r\n  observeEvent(input$step_9, {\r\n    times$step_9 <- input$step_9\r\n    update_following_steps(\"step_9\", times, session)\r\n  })\r\n  \r\n  observeEvent(input$step_10, {\r\n    times$step_10 <- input$step_10\r\n    update_following_steps(\"step_10\", times, session)\r\n  })\r\n  \r\n  observeEvent(input$step_11, {\r\n    times$step_11 <- input$step_11\r\n  })\r\n  \r\n  # Reset button to revert to default times\r\n  observeEvent(input$reset, {\r\n    times$step_1 <- default_times$step_1\r\n    times$step_2 <- default_times$step_2\r\n    times$step_3 <- default_times$step_3\r\n    times$step_4 <- default_times$step_4\r\n    times$step_5 <- default_times$step_5\r\n    times$step_6 <- default_times$step_6\r\n    times$step_7 <- default_times$step_7\r\n    times$step_8 <- default_times$step_8\r\n    times$step_9 <- default_times$step_9\r\n    times$step_10 <- default_times$step_10\r\n    times$step_11 <- default_times$step_11\r\n    \r\n    # Reset all the time inputs to default values\r\n    updateTimeInput(session, \"step_1\", value = default_times$step_1)\r\n    updateTimeInput(session, \"step_2\", value = default_times$step_2)\r\n    updateTimeInput(session, \"step_3\", value = default_times$step_3)\r\n    updateTimeInput(session, \"step_4\", value = default_times$step_4)\r\n    updateTimeInput(session, \"step_5\", value = default_times$step_5)\r\n    updateTimeInput(session, \"step_6\", value = default_times$step_6)\r\n    updateTimeInput(session, \"step_7\", value = default_times$step_7)\r\n    updateTimeInput(session, \"step_8\", value = default_times$step_8)\r\n    updateTimeInput(session, \"step_9\", value = default_times$step_9)\r\n    updateTimeInput(session, \"step_10\", value = default_times$step_10)\r\n    updateTimeInput(session, \"step_11\", value = default_times$step_11)\r\n  })\r\n  \r\n  # Display the adjusted times in 12-hour format without seconds\r\n  output$adjusted_times <- renderPrint({\r\n    list(\r\n      \"1. Feed Starter:\" = format_time_12h(times$step_1),\r\n      \"2. Start Autolyse & Make Porridge:\" = format_time_12h(times$step_2),\r\n      \"3. Add Salt and Start Bulk Fermentation:\" = format_time_12h(times$step_3),\r\n      \"4. First Turn and Mix-in Oats:\" = format_time_12h(times$step_4),\r\n      \"5. Turn #2:\" = format_time_12h(times$step_5),\r\n      \"6. Turn #3:\" = format_time_12h(times$step_6),\r\n      \"7. Turn #4:\" = format_time_12h(times$step_7),\r\n      \"8. Turn #5:\" = format_time_12h(times$step_8),\r\n      \"9. Turn #6 and Leave Alone for 2.5 hours:\" = format_time_12h(times$step_9),\r\n      \"10. Turn on Counter and Shape for Bench Rest:\" = format_time_12h(times$step_10),\r\n      \"11. Fold and Place in Fridge:\" = format_time_12h(times$step_11)\r\n    )\r\n  })\r\n}\r\n\r\nshinyApp(ui = ui, server = server)\r\n\r\n","type":"text"}]
